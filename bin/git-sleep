#!/usr/bin/env ruby

require 'rubygems'
require 'netrc'
require File.expand_path('../../lib/git-sleep', __FILE__)

netrc = Netrc.read(GitSleep::NETRC_PATH)

help_text = "Available commands:
    git sleep authorize
    git sleep init"

case ARGV.length
when 0
  puts help_text
when 1
  case ARGV.first.downcase.to_sym
  when :init
    current_path = File.expand_path(".")
    if Dir.entries(current_path).include?(".git")
      puts "This is a git repo, so I'll now install the hook"
      path_to_hook = File.expand_path("../../hooks/pre-commit", __FILE__)
      hook_code = File.read(path_to_hook)
      sample_file_name = "#{current_path}/.git/hooks/pre-commit.sample"
      non_sample_file_name = "#{current_path}/.git/hooks/pre-commit"
      if File.exists? sample_file_name
        File.open(sample_file_name, "w") do |f|
          f.write hook_code
        end
        successful_rename = File.rename sample_file_name, non_sample_file_name
        if successful_rename.zero?
          puts "Successfully installed hook. Enjoy your new sense of balance."
        else
          puts "Sorry, the hook failed to install..." # will this ever happen?
        end
      elsif File.exists? non_sample_file_name
        puts "You already have a pre-commit hook and we don't want to overwrite it..."
        # they have neither file, which is weird, that means they deleted it
        # I guess we should probably create it in that case
      else
        puts "Wait... did you delete your pre-commit hook example..? why?"
      end
    else
      puts "This is not a git repo!"
    end
  when :authorize
    puts "Visit #{GitSleep::OUR_SITE} to get the necessary information"
    puts "what is your xid?"
    print "> "
    token = $stdin.gets.chomp
    netrc.new_item_prefix = "\n# jawbone xid\n"
    netrc["sleepytime.com"] = xid, "no password"
    netrc.save
  when :"-v"
    puts "Git Sleep v#{GitSleep::VERSION}"
  else # unrecognized command
    puts help_text
  end
else # other amounts of arguments
  puts help_text
end